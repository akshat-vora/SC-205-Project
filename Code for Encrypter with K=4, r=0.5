%% This is MATLAB code

clc;
clearvars;
%% Signal Generation

Signal_str = input('Enter string: ');
Signal_temp = dec2bin(double(Signal_str));

Signal = zeros(1,7*length(Signal_str));
for i =1: length(Signal_str)
    for j =1:7
        Signal((i-1)*7+j) = str2num(Signal_temp(i,j));
    end
end
    
%% Encoder
encoded_signal = encoder(Signal);
disp('Original Signal:');
disp(Signal_str);
clc;
disp('Encoded Signal:');



%% Converting to binary ASCII Strings
encoded_string = '';
for i=1:length(encoded_signal)/7
    string_sig = num2str(encoded_signal(7*(i-1)+1));
    string_sig = strcat(string_sig,num2str(encoded_signal(7*(i-1)+2)));
    string_sig = strcat(string_sig,num2str(encoded_signal(7*(i-1)+3)));
    string_sig = strcat(string_sig,num2str(encoded_signal(7*(i-1)+4)));
    string_sig = strcat(string_sig,num2str(encoded_signal(7*(i-1)+5)));
    string_sig = strcat(string_sig,num2str(encoded_signal(7*(i-1)+6)));
    string_sig = strcat(string_sig,num2str(encoded_signal(7*(i-1)+7)));
    
    if bin2dec(string_sig) < 33
        encoded_string = strcat(encoded_string,char(255-bin2dec(string_sig)));
    else
        encoded_string = strcat(encoded_string,char(bin2dec(string_sig)));
    end
    string_sig = '';
end
disp(encoded_string);

%% Functions
function [Trans] = encoder(Signal)
    state = '000';
    len_sig = length(Signal);
    for j=1:len_sig
        if strcmp(state,'000')
            [Trans(2*(j-1)+2),Trans(2*(j-1)+1),state] = State_fun_000(Signal(j));
        elseif strcmp(state,'001')
            [Trans(2*(j-1)+2),Trans(2*(j-1)+1),state] = State_fun_001(Signal(j));
        elseif strcmp(state,'010')
            [Trans(2*(j-1)+2),Trans(2*(j-1)+1),state] = State_fun_010(Signal(j));
        elseif strcmp(state,'011')
            [Trans(2*(j-1)+2),Trans(2*(j-1)+1),state] = State_fun_011(Signal(j));
        elseif strcmp(state,'100')
            [Trans(2*(j-1)+2),Trans(2*(j-1)+1),state] = State_fun_100(Signal(j));
        elseif strcmp(state,'101')
            [Trans(2*(j-1)+2),Trans(2*(j-1)+1),state] = State_fun_101(Signal(j));
        elseif strcmp(state,'110')
            [Trans(2*(j-1)+2),Trans(2*(j-1)+1),state] = State_fun_110(Signal(j));
        elseif strcmp(state,'111')
            [Trans(2*(j-1)+2),Trans(2*(j-1)+1),state] = State_fun_111(Signal(j));
        end
    end
end

function[p0, p1, state] = State_fun_000(x)
    if x==0
        p0 = 0;
        p1 = 0;
        state = '000';
    else
        p0 = 1;
        p1 = 1;
        state = '001';
    end
end
function[p0, p1, state] = State_fun_001(x)
    if x==0
        p0 = 1;
        p1 = 0;
        state = '010';
    else
        p0 = 0;
        p1 = 1;
        state = '011';
    end
end
function[p0, p1, state] = State_fun_010(x)
    if x==0
        p0 = 1;
        p1 = 1;
        state = '100';
    else
        p0 = 0;
        p1 = 0;
        state = '101';
    end
end
function[p0, p1, state] = State_fun_011(x)
    if x==0
        p0 = 0;
        p1 = 1;
        state = '110';
    else
        p0 = 1;
        p1 = 0;
        state = '111';
    end
end
function[p0, p1, state] = State_fun_100(x)
    if x==0
        p0 = 1;
        p1 = 1;
        state = '000';
    else
        p0 = 0;
        p1 = 0;
        state = '001';
    end
end
function[p0, p1, state] = State_fun_101(x)
    if x==0
        p0 = 0;
        p1 = 1;
        state = '010';
    else
        p0 = 1;
        p1 = 0;
        state = '011';
    end
end
function[p0, p1, state] = State_fun_110(x)
    if x==0
        p0 = 0;
        p1 = 0;
        state = '100';
    else
        p0 = 1;
        p1 = 1;
        state = '101';
    end
end
function[p0, p1, state] = State_fun_111(x)
    if x==0
        p0 = 1;
        p1 = 0;
        state = '110';
    else
        p0 = 0;
        p1 = 1;
        state = '111';
    end
end




